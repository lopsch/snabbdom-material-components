{"version":3,"sources":["../../../src/components/linear-progress/LinearProgressAdapter.js"],"names":["LinearProgressAdapter","sel","elm","data","linearProgress","component","update_","updateProps_","props","updateBuffer_","updateNumber_","updateProgress_","updateReverse_","updateBoolean_","updateDeterminate_","determinate","foundation_"],"mappings":"oEAAA,iH,knBAGqBA,sB,aACnB,aAAiC,SAAlBC,GAAkB,KAAbC,GAAa,KAARC,IAAQ,mHACpB,2CADoB,SAE/B,GAAKC,cAAL,CAAsB,EAAKC,SAFI,CAI/B,EAAKC,OAAL,CAAe,aAAqB,CAClC,EAAKC,YAAL,CAAkB,EAAMJ,IAAN,CAAWK,KAA7B,CACD,CAN8B,CAQ/B,EAAKC,aAAL,CAAqB,WAAS,CAC5B,EAAKC,aAAL,GAA0B,QAA1B,CACD,CAV8B,CAY/B,EAAKC,eAAL,CAAuB,WAAS,CAC9B,EAAKD,aAAL,GAA0B,UAA1B,CACD,CAd8B,CAgB/B,EAAKE,cAAL,CAAsB,WAAS,CAC7B,EAAKC,cAAL,GAA2B,SAA3B,CACD,CAlB8B,CAoB/B,EAAKC,kBAAL,CAA0B,WAAS,CACjC,GAAM,GAAS,GAAS,EAAMC,WAA9B,CACI,aAA2C,SAAlB,aAAzB,CAF6B,CAK/B,EAAKF,cAAL,GAA2B,aAA3B,CAL+B,CAG/B,EAAKT,cAAL,CAAoBW,WAApB,GAIH,CA3B8B,CA6B/B,EAAKF,cAAL,CAAsB,aAAiB,CACrC,GAAM,GAAS,GAAS,IAAxB,CACM,EAAS,EAAKT,cAAL,CAAoBY,WAApB,OADf,CAEsB,SAAlB,YAA+B,KAHE,GAInC,EAAKZ,cAAL,KAJmC,CAMtC,CAnC8B,CAqC/B,EAAKM,aAAL,CAAqB,aAAiB,CAElC,GACuB,QAAvB,QAAO,KADP,EAEA,OAAgB,EAAKN,cAAL,GAJkB,GAMlC,EAAKA,cAAL,IAA4B,IANM,CAQrC,CA7C8B,CA+C/B,EAAKG,YAAL,CAAoB,WAAS,CAC3B,EAAKE,aAAL,GAD2B,CAE3B,EAAKE,eAAL,GAF2B,CAG3B,EAAKC,cAAL,GAH2B,CAI3B,EAAKE,kBAAL,GACD,CApD8B,CAsD/B,EAAKP,YAAL,CAAkB,EAAKC,KAAvB,CAtD+B,EAuDhC,C,2DAxDkBR,qB","file":"LinearProgressAdapter.js","sourcesContent":["import { MDCLinearProgress } from '@material/linear-progress/dist/mdc.linearProgress.min'\nimport { SMCAdapter } from '../base'\n\nexport default class LinearProgressAdapter extends SMCAdapter {\n  constructor ({ sel, elm, data }) {\n    super(sel, new MDCLinearProgress(elm))\n    this.linearProgress = this.component\n\n    this.update_ = (oldVnode, vnode) => {\n      this.updateProps_(vnode.data.props)\n    }\n\n    this.updateBuffer_ = props => {\n      this.updateNumber_(props, 'buffer')\n    }\n\n    this.updateProgress_ = props => {\n      this.updateNumber_(props, 'progress')\n    }\n\n    this.updateReverse_ = props => {\n      this.updateBoolean_(props, 'reverse')\n    }\n\n    this.updateDeterminate_ = props => {\n      const wanted = props && props.determinate\n      if (wanted === undefined || (typeof wanted === 'boolean' && !wanted)) {\n        this.linearProgress.determinate = false\n      } else {\n        this.updateBoolean_(props, 'determinate')\n      }\n    }\n\n    this.updateBoolean_ = (props, prop) => {\n      const wanted = props && props[prop]\n      const active = this.linearProgress.foundation_[`${prop}_`]\n      if (typeof wanted === 'boolean' && wanted !== active) {\n        this.linearProgress[prop] = wanted\n      }\n    }\n\n    this.updateNumber_ = (props, prop) => {\n      if (\n        props &&\n        typeof props[prop] === 'number' &&\n        props[prop] !== this.linearProgress[prop]\n      ) {\n        this.linearProgress[prop] = props[prop]\n      }\n    }\n\n    this.updateProps_ = props => {\n      this.updateBuffer_(props)\n      this.updateProgress_(props)\n      this.updateReverse_(props)\n      this.updateDeterminate_(props)\n    }\n\n    this.updateProps_(data.props)\n  }\n}\n"]}