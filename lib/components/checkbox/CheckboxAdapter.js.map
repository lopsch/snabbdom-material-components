{"version":3,"sources":["../../../src/components/checkbox/CheckboxAdapter.js"],"names":["CheckboxAdapter","sel","elm","data","checkbox","component","update_","updateProps_","props","updateDisabled_","updateBoolean_","updateIndeterminate_","updateChecked_","updateValue_","value"],"mappings":"oEAAA,8F,knBAGqBA,gB,aACnB,aAAiC,SAAlBC,GAAkB,KAAbC,GAAa,KAARC,IAAQ,mHACpB,+BADoB,SAE/B,GAAKC,QAAL,CAAgB,EAAKC,SAFU,CAI/B,EAAKC,OAAL,CAAe,aAAqB,CAClC,EAAKC,YAAL,CAAkB,EAAMJ,IAAN,CAAWK,KAA7B,CACD,CAN8B,CAQ/B,EAAKC,eAAL,CAAuB,WAAS,CAC9B,EAAKC,cAAL,GAA2B,UAA3B,CACD,CAV8B,CAY/B,EAAKC,oBAAL,CAA4B,WAAS,CACnC,EAAKD,cAAL,GAA2B,eAA3B,CACD,CAd8B,CAgB/B,EAAKE,cAAL,CAAsB,WAAS,CAC7B,EAAKF,cAAL,GAA2B,SAA3B,CACD,CAlB8B,CAoB/B,EAAKG,YAAL,CAAoB,WAAS,CAC3B,GAAM,GAAS,GAAS,EAAMC,KAA9B,CACM,EAAS,EAAKV,QAAL,CAAcU,KAD7B,CAGI,GAAU,KAJa,GAKzB,EAAKV,QAAL,CAAcU,KAAd,EALyB,CAO5B,CA3B8B,CA6B/B,EAAKJ,cAAL,CAAsB,aAAiB,CACrC,GAAM,GAAS,GAAS,IAAxB,CACM,EAAS,EAAKN,QAAL,GADf,CAEsB,SAAlB,YAA+B,KAHE,GAInC,EAAKA,QAAL,KAJmC,CAMtC,CAnC8B,CAqC/B,EAAKG,YAAL,CAAoB,WAAS,CAC3B,EAAKE,eAAL,GAD2B,CAE3B,EAAKE,oBAAL,GAF2B,CAG3B,EAAKC,cAAL,GAH2B,CAI3B,EAAKC,YAAL,GACD,CA1C8B,CA4C/B,EAAKN,YAAL,CAAkB,EAAKC,KAAvB,CA5C+B,EA6ChC,C,2DA9CkBR,e","file":"CheckboxAdapter.js","sourcesContent":["import { MDCCheckbox } from '@material/checkbox/dist/mdc.checkbox.min'\nimport { SMCAdapter } from '../base'\n\nexport default class CheckboxAdapter extends SMCAdapter {\n  constructor ({ sel, elm, data }) {\n    super(sel, new MDCCheckbox(elm))\n    this.checkbox = this.component\n\n    this.update_ = (oldVnode, vnode) => {\n      this.updateProps_(vnode.data.props)\n    }\n\n    this.updateDisabled_ = props => {\n      this.updateBoolean_(props, 'disabled')\n    }\n\n    this.updateIndeterminate_ = props => {\n      this.updateBoolean_(props, 'indeterminate')\n    }\n\n    this.updateChecked_ = props => {\n      this.updateBoolean_(props, 'checked')\n    }\n\n    this.updateValue_ = props => {\n      const wanted = props && props.value\n      const active = this.checkbox.value\n\n      if (wanted && wanted !== active) {\n        this.checkbox.value = wanted\n      }\n    }\n\n    this.updateBoolean_ = (props, prop) => {\n      const wanted = props && props[prop]\n      const active = this.checkbox[prop]\n      if (typeof wanted === 'boolean' && wanted !== active) {\n        this.checkbox[prop] = wanted\n      }\n    }\n\n    this.updateProps_ = props => {\n      this.updateDisabled_(props)\n      this.updateIndeterminate_(props)\n      this.updateChecked_(props)\n      this.updateValue_(props)\n    }\n\n    this.updateProps_(data.props)\n  }\n}\n"]}