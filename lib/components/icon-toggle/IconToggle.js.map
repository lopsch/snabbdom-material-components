{"version":3,"sources":["../../../src/components/icon-toggle/IconToggle.js"],"names":["IconToggle","props","onChange","tabIndex","label","toggleOn","toggleOff","hooks","utils","makeHooks","ons","attrs","role","makeKeyValue","dataset","parseToggle_","JSON","stringify"],"mappings":"+xDAOqBA,W,aACnB,YAA0C,4QAUpC,EAAKC,KAV+B,KAItCC,QAJsC,KAKtCC,QALsC,KAMtCC,KANsC,KAOtCC,QAPsC,KAQtCC,SARsC,4FAWxC,GAAKC,KAAL,CAAa,EAAKC,KAAL,CAAWC,SAAX,6BAX2B,CAYxC,EAAKC,GAAL,GAZwC,CAahB,UAApB,UAboC,GActC,EAAKA,GAAL,CAAS,sBAAT,GAdsC,EAgBxC,EAAKC,KAAL,WACEC,KAAM,QADR,EAEK,EAAKJ,KAAL,CAAWK,YAAX,CAAwB,UAAxB,GAFL,CAGK,EAAKL,KAAL,CAAWK,YAAX,CAAwB,YAAxB,GAHL,CAhBwC,CAqBxC,EAAKC,OAAL,aACK,EAAKN,KAAL,CAAWK,YAAX,CAAwB,UAAxB,CAAoC,EAAKE,YAAL,GAApC,CADL,CAEK,EAAKP,KAAL,CAAWK,YAAX,CAAwB,WAAxB,CAAqC,EAAKE,YAAL,GAArC,CAFL,CArBwC,CAyBxC,EAAKd,KAAL,EAzBwC,EA0BzC,C,wFAEqB,CACpB,MAAyB,QAAlB,kDACHe,KAAKC,SAAL,GADG,CAEHD,KAAKC,SAAL,IACL,C,2CAjCkBjB,U","file":"IconToggle.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport html from 'snabbdom-jsx-pragma'\n/* eslint-enable no-unused-vars */\nimport { STYLE_SWITCHES } from './styles'\nimport { SMCComponent } from '../base'\nimport IconToggleAdapter from './IconToggleAdapter'\n\nexport default class IconToggle extends SMCComponent {\n  constructor (props_ = {}, children_ = []) {\n    super(props_, children_, STYLE_SWITCHES)\n\n    const {\n      onChange,\n      tabIndex,\n      label,\n      toggleOn,\n      toggleOff,\n      ...otherProps\n    } = this.props\n    this.hooks = this.utils.makeHooks(IconToggleAdapter)\n    this.ons = {}\n    if (typeof onChange === 'function') {\n      this.ons['MDCIconToggle:change'] = onChange\n    }\n    this.attrs = {\n      role: 'button',\n      ...this.utils.makeKeyValue('tabindex', tabIndex),\n      ...this.utils.makeKeyValue('aria-label', label)\n    }\n    this.dataset = {\n      ...this.utils.makeKeyValue('toggleOn', this.parseToggle_(toggleOn)),\n      ...this.utils.makeKeyValue('toggleOff', this.parseToggle_(toggleOff))\n    }\n    this.props = otherProps\n  }\n\n  parseToggle_ (toggle) {\n    return typeof toggle === 'object'\n      ? JSON.stringify(toggle)\n      : JSON.stringify({})\n  }\n}\n"]}