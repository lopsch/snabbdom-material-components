{"version":3,"sources":["../../../src/components/switch/SwitchAdapter.js"],"names":["SwitchAdapter","sel","elm","data","MDCSwitch","switch","component","update_","updateProps_","props","updateDisabled_","updateBoolean_","updateChecked_","updateValue_","value","root","native_","checked","indeterminate","disabled","classList","add","remove","querySelector"],"mappings":"2+BAGqBA,c,aACnB,aAAiC,SAAlBC,GAAkB,KAAbC,GAAa,KAARC,IAAQ,mHACpB,GAAIC,UAAJ,GADoB,SAE/B,GAAKC,MAAL,CAAc,EAAKC,SAFY,CAI/B,EAAKC,OAAL,CAAe,aAAqB,CAClC,EAAKC,YAAL,CAAkB,EAAML,IAAN,CAAWM,KAA7B,CACD,CAN8B,CAQ/B,EAAKC,eAAL,CAAuB,WAAS,CAC9B,EAAKC,cAAL,GAA2B,UAA3B,CACD,CAV8B,CAY/B,EAAKC,cAAL,CAAsB,WAAS,CAC7B,EAAKD,cAAL,GAA2B,SAA3B,CACD,CAd8B,CAgB/B,EAAKE,YAAL,CAAoB,WAAS,CAC3B,GAAM,GAAS,GAAS,EAAMC,KAA9B,CACM,EAAS,EAAKT,MAAL,CAAYS,KAD3B,CAGI,GAAU,KAJa,GAKzB,EAAKT,MAAL,CAAYS,KAAZ,EALyB,CAO5B,CAvB8B,CAyB/B,EAAKH,cAAL,CAAsB,aAAiB,CACrC,GAAM,GAAS,GAAS,IAAxB,CACM,EAAS,EAAKN,MAAL,GADf,CAEsB,SAAlB,YAA+B,KAHE,GAInC,EAAKA,MAAL,KAJmC,CAMtC,CA/B8B,CAiC/B,EAAKG,YAAL,CAAoB,WAAS,CAC3B,EAAKE,eAAL,GAD2B,CAE3B,EAAKE,cAAL,GAF2B,CAG3B,EAAKC,YAAL,GACD,CArC8B,CAuC/B,EAAKL,YAAL,CAAkB,EAAKC,KAAvB,CAvC+B,EAwChC,C,2DAzCkBT,a,IA4CfI,U,YACJ,aAAmB,yBACjB,KAAKW,IAAL,EACD,C,wDAEc,CACb,MAAO,MAAKC,OAAL,CAAaC,OACrB,C,oBAEqB,CACpB,KAAKD,OAAL,CAAaC,OAAb,EACD,C,yCAEoB,CACnB,MAAO,MAAKD,OAAL,CAAaE,aACrB,C,oBAEiC,CAChC,KAAKF,OAAL,CAAaE,aAAb,EACD,C,oCAEe,CACd,MAAO,MAAKF,OAAL,CAAaG,QACrB,C,oBAEuB,CACtB,KAAKH,OAAL,CAAaG,QAAb,EADsB,GAIpB,KAAKJ,IAAL,CAAUK,SAAV,CAAoBC,GAApB,qBAJoB,CAMpB,KAAKN,IAAL,CAAUK,SAAV,CAAoBE,MAApB,qBAEH,C,iCAEY,CACX,MAAO,MAAKN,OAAL,CAAaF,KACrB,C,oBAEiB,CAChB,KAAKE,OAAL,CAAaF,KAAb,EACD,C,mCAEc,CACb,MAAO,MAAKC,IAAL,CAAUQ,aAAV,yBACR,C","file":"SwitchAdapter.js","sourcesContent":["import { SW_NC_CLASS, SW_DISABLED } from './styles'\nimport { SMCAdapter } from '../base'\n\nexport default class SwitchAdapter extends SMCAdapter {\n  constructor ({ sel, elm, data }) {\n    super(sel, new MDCSwitch(elm))\n    this.switch = this.component\n\n    this.update_ = (oldVnode, vnode) => {\n      this.updateProps_(vnode.data.props)\n    }\n\n    this.updateDisabled_ = props => {\n      this.updateBoolean_(props, 'disabled')\n    }\n\n    this.updateChecked_ = props => {\n      this.updateBoolean_(props, 'checked')\n    }\n\n    this.updateValue_ = props => {\n      const wanted = props && props.value\n      const active = this.switch.value\n\n      if (wanted && wanted !== active) {\n        this.switch.value = wanted\n      }\n    }\n\n    this.updateBoolean_ = (props, prop) => {\n      const wanted = props && props[prop]\n      const active = this.switch[prop]\n      if (typeof wanted === 'boolean' && wanted !== active) {\n        this.switch[prop] = wanted\n      }\n    }\n\n    this.updateProps_ = props => {\n      this.updateDisabled_(props)\n      this.updateChecked_(props)\n      this.updateValue_(props)\n    }\n\n    this.updateProps_(data.props)\n  }\n}\n\nclass MDCSwitch {\n  constructor (elm_) {\n    this.root = elm_\n  }\n\n  get checked () {\n    return this.native_.checked\n  }\n\n  set checked (checked) {\n    this.native_.checked = checked\n  }\n\n  get indeterminate () {\n    return this.native_.indeterminate\n  }\n\n  set indeterminate (indeterminate) {\n    this.native_.indeterminate = indeterminate\n  }\n\n  get disabled () {\n    return this.native_.disabled\n  }\n\n  set disabled (disabled) {\n    this.native_.disabled = disabled\n\n    if (disabled) {\n      this.root.classList.add(SW_DISABLED)\n    } else {\n      this.root.classList.remove(SW_DISABLED)\n    }\n  }\n\n  get value () {\n    return this.native_.value\n  }\n\n  set value (value) {\n    this.native_.value = value\n  }\n\n  get native_ () {\n    return this.root.querySelector(`.${SW_NC_CLASS}`)\n  }\n}\n"]}